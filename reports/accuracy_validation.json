{
  "correctness_validation": {
    "total_tests": 22,
    "passed_tests": 15,
    "failed_tests": 7,
    "pass_rate": 68.18
  },
  "summary": {
    "timestamp": 1761453901.5082738,
    "configuration": {
      "lake_path": "data/lake",
      "mvs_path": "data/mvs_rebuilt",
      "memory": "12GB",
      "threads": 8
    },
    "test_categories": {
      "timezone": 2,
      "between_operator": 2,
      "avg_computation": 3,
      "mv_consistency": 1,
      "data_types": 6,
      "null_handling": 5,
      "date_boundaries": 3
    },
    "failure_categories": {
      "Timezone Validation": [
        "Timezone Validation"
      ],
      "AVG Computation Validation": [
        "AVG Computation Validation"
      ],
      "MV Consistency Validation": [
        "MV Consistency Validation"
      ],
      "NULL Check": [
        "NULL Check: day",
        "NULL Check: type",
        "NULL Check: advertiser_id",
        "NULL Check: publisher_id"
      ]
    },
    "critical_failures": [
      "MV Consistency Validation"
    ]
  },
  "detailed_results": [
    {
      "test_name": "Timezone Setting",
      "passed": true,
      "details": "DuckDB timezone setting verification",
      "expected": "UTC",
      "actual": "UTC",
      "tolerance_pct": null
    },
    {
      "test_name": "Timezone Validation",
      "passed": false,
      "details": "Error during timezone validation: Binder Error: Referenced column \"timestamp\" not found in FROM clause!\nCandidate bindings: \"events_v.ts\", \"events_v.total_price\", \"events_v.type\", \"events_v.minute\", \"events_v.advertiser_id\"\nLINE 4:                 WHERE timestamp LIKE '%+%' OR timestamp LIKE '%-0%' \n                LIMIT 100\n            ...\n                              ^",
      "expected": "UTC compliance",
      "actual": "Error",
      "tolerance_pct": null
    },
    {
      "test_name": "BETWEEN Inclusivity",
      "passed": true,
      "details": "BETWEEN '2024-01-15' AND '2024-01-15' should equal day = '2024-01-15'",
      "expected": "397625",
      "actual": "397625",
      "tolerance_pct": null
    },
    {
      "test_name": "BETWEEN Range Inclusivity",
      "passed": true,
      "details": "BETWEEN range should include both boundaries",
      "expected": "1215625",
      "actual": "1215625",
      "tolerance_pct": null
    },
    {
      "test_name": "AVG vs SUM/COUNT Accuracy",
      "passed": true,
      "details": "Direct AVG vs calculated SUM/COUNT should match within 0.001%",
      "expected": "55.876579",
      "actual": "55.876579",
      "tolerance_pct": 1.27162891706269e-14
    },
    {
      "test_name": "AVG Computation Validation",
      "passed": false,
      "details": "Error during AVG validation: Binder Error: Referenced column \"sum_total_pur\" not found in FROM clause!\nCandidate bindings: \"read_parquet.unique_users\"\nLINE 2:                     SELECT SUM(sum_total_pur) / NULLIF(SUM(cnt_total_...\n                                       ^",
      "expected": "Mathematical accuracy",
      "actual": "Error",
      "tolerance_pct": null
    },
    {
      "test_name": "MV Consistency Validation",
      "passed": false,
      "details": "Error during MV consistency validation: Binder Error: Referenced column \"events_all\" not found in FROM clause!\nCandidate bindings: \"read_parquet.serves\", \"read_parquet.revenue\"\nLINE 2:                     SELECT SUM(events_all) \n                                       ^",
      "expected": "MV/base consistency",
      "actual": "Error",
      "tolerance_pct": null
    },
    {
      "test_name": "Data Type: day",
      "passed": true,
      "details": "Column day type validation",
      "expected": "VARCHAR",
      "actual": "VARCHAR",
      "tolerance_pct": null
    },
    {
      "test_name": "Data Type: type",
      "passed": true,
      "details": "Column type type validation",
      "expected": "VARCHAR",
      "actual": "VARCHAR",
      "tolerance_pct": null
    },
    {
      "test_name": "Data Type: country",
      "passed": true,
      "details": "Column country type validation",
      "expected": "VARCHAR",
      "actual": "VARCHAR",
      "tolerance_pct": null
    },
    {
      "test_name": "Data Type: total_price",
      "passed": true,
      "details": "Column total_price type validation",
      "expected": "['DOUBLE', 'DECIMAL', 'FLOAT']",
      "actual": "DOUBLE",
      "tolerance_pct": null
    },
    {
      "test_name": "Data Type: advertiser_id",
      "passed": true,
      "details": "Column advertiser_id type validation",
      "expected": "['INTEGER', 'BIGINT']",
      "actual": "INTEGER",
      "tolerance_pct": null
    },
    {
      "test_name": "Data Type: publisher_id",
      "passed": true,
      "details": "Column publisher_id type validation",
      "expected": "['INTEGER', 'BIGINT']",
      "actual": "INTEGER",
      "tolerance_pct": null
    },
    {
      "test_name": "Price Value Ranges",
      "passed": true,
      "details": "Price values should be in reasonable ranges",
      "expected": "0 <= price < 10000",
      "actual": "min=0.50, max=344.58, avg=64.75",
      "tolerance_pct": null
    },
    {
      "test_name": "NULL Check: day",
      "passed": false,
      "details": "Key column day should not contain NULLs",
      "expected": "0",
      "actual": "4999992",
      "tolerance_pct": null
    },
    {
      "test_name": "NULL Check: type",
      "passed": false,
      "details": "Key column type should not contain NULLs",
      "expected": "0",
      "actual": "4999992",
      "tolerance_pct": null
    },
    {
      "test_name": "NULL Check: advertiser_id",
      "passed": false,
      "details": "Key column advertiser_id should not contain NULLs",
      "expected": "0",
      "actual": "4999992",
      "tolerance_pct": null
    },
    {
      "test_name": "NULL Check: publisher_id",
      "passed": false,
      "details": "Key column publisher_id should not contain NULLs",
      "expected": "0",
      "actual": "4999992",
      "tolerance_pct": null
    },
    {
      "test_name": "NULL Exclusion in AVG",
      "passed": true,
      "details": "AVG should properly exclude NULL values",
      "expected": "non_null_count <= total_count",
      "actual": "non_null=38, total=397625, nulls=397587",
      "tolerance_pct": null
    },
    {
      "test_name": "Date Format Consistency",
      "passed": true,
      "details": "Dates should be in YYYY-MM-DD format",
      "expected": "YYYY-MM-DD format",
      "actual": "min=2024-01-01, max=2024-12-31",
      "tolerance_pct": null
    },
    {
      "test_name": "Date Range Validity",
      "passed": true,
      "details": "Dates should be within expected 2024 range",
      "expected": "2024-01-01 to 2024-12-31",
      "actual": "2024-01-01 to 2024-12-31",
      "tolerance_pct": null
    },
    {
      "test_name": "Date Coverage",
      "passed": true,
      "details": "Should have reasonable date coverage",
      "expected": ">= 292 days",
      "actual": "366 unique days",
      "tolerance_pct": null
    }
  ],
  "recommendations": [
    "Multiple validation failures detected. Review data pipeline and MV generation process.",
    "MV consistency issues found. Consider regenerating materialized views.",
    "AVG computation accuracy issues. Verify numeric precision and aggregation logic.",
    "Critical failures in: MV Consistency Validation. Immediate investigation required."
  ]
}